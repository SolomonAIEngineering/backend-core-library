syntax = "proto3";

package message_definition.v1;

import "protoc-gen-gorm/options/gorm.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/SolomonAIEngineering/backend-core-library/message_queue/generated/message-definition/v1";

/*
  HeadlessAuthenticationServiceDeleteAccountMessageFormat: represents an sqs message format
  for deleting an account via the headless authentication service
*/
message HeadlessAuthenticationServiceDeleteAccountMessageFormat {
  option (gorm.opts) = {
    ormable : true,
  };
  // authn id which is the id of the account from the vantage point of the 
  // authentication service
  uint64 authn_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];
  // account email
  // Validations:
  // - must be an email and required 
  string email = 2 [
    (validate.rules).string.email = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"lksdjhfgsdhfghdsgfhgdh@gmail.com\""
    } 
  ];
}

/*
  FinancialIntegrationServiceMessageFormat: represents an sqs message format
  for deleting an account via the financial integration service
*/
message FinancialIntegrationServiceMessageFormat {
  option (gorm.opts) = {
    ormable : true,
  };
  // user_id id from the vantage point of the user service
  uint64 user_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];
}

/*
  SocialServiceMessageFormat: represents an sqs message format
  for deleting an account via the financial integration service
*/
message SocialServiceMessageFormat {
  option (gorm.opts) = {
    ormable : true,
  };
  // user_id id from the vantage point of the social service
  uint64 user_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];
}
