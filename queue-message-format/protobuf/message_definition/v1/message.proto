syntax = "proto3";

package message_definition.v1;

import "protoc-gen-gorm/options/gorm.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/SolomonAIEngineering/backend-core-library/message_queue/generated/message-definition/v1";


/*
  DeleteAccountMessageFormat: represents an sqs message format
  for deleting an accoun
*/
message DeleteAccountMessageFormat {
  enum ProfileType {
    PROFILE_TYPE_UNSPECIFIED = 0;
    PROFILE_TYPE_USER = 1;
    PROFILE_TYPE_BUSINESS = 2;
  }

  option (gorm.opts) = {
    ormable : true,
  };
  // authn id which is the id of the account from the vantage point of the 
  // authentication service
  uint64 authn_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];
  // account email
  // Validations:
  // - must be an email and required 
  string email = 2 [
    (validate.rules).string.email = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"lksdjhfgsdhfghdsgfhgdh@gmail.com\""
    } 
  ];

  // user_id id from the vantage point of the user service
  uint64 user_id = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];

  // the profile type of the given account
  ProfileType profile_type = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: ""
    }
  ];
}
